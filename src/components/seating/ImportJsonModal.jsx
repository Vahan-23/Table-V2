import React, { useState, useRef } from 'react';
import { useSeating } from './SeatingContext';
import { useTranslations } from './useTranslations';
import { useGroups } from './useGroups';

const ImportJsonModal = () => {
  const { state, dispatch, actions } = useSeating();
  const { t } = useTranslations();
  const { addGroup } = useGroups();
  
  const [jsonText, setJsonText] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [previewData, setPreviewData] = useState(null);
  const [error, setError] = useState('');
  const fileInputRef = useRef(null);

  const handleFileSelect = (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        try {
          const content = e.target.result;
          setJsonText(content);
          setError('');
          parseAndPreview(content);
        } catch (err) {
          setError('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞');
        }
      };
      reader.readAsText(file);
    }
  };

  const parseAndPreview = (text) => {
    try {
      const data = JSON.parse(text);
      if (data.guests && Array.isArray(data.guests)) {
        setPreviewData(data);
        setError('');
      } else {
        setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON. –û–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ "guests"');
        setPreviewData(null);
      }
    } catch (err) {
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON');
      setPreviewData(null);
    }
  };

  const handleJsonChange = (e) => {
    const text = e.target.value;
    setJsonText(text);
    if (text.trim()) {
      parseAndPreview(text);
    } else {
      setPreviewData(null);
      setError('');
    }
  };

  const processGuests = () => {
    if (!previewData || !previewData.guests) return;

    setIsProcessing(true);
    
    try {
      const guests = previewData.guests;
      let groupsCreated = 0;
      let totalGuests = 0;

      guests.forEach((guest, index) => {
        const groupName = `–ì—Ä—É–ø–ø–∞ ${guest.group_description || `–ì–æ—Å—Ç—å ${index + 1}`}`;
        const members = [];

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–æ—Å—Ç—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        if (guest.guest_name && guest.guest_name.trim()) {
          members.push(guest.guest_name.trim());
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        if (guest.second_guest && guest.has_spouse && guest.second_guest.trim()) {
          // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä–æ–∫—É second_guest –∫–∞–∫ –≥–æ—Å—Ç—è
          members.push(guest.second_guest.trim());
        }

        // –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏
        if (members.length > 0) {
          console.log(`–°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É "${groupName}" —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏:`, members);
          addGroup(groupName, members);
          groupsCreated++;
          totalGuests += members.length;
        } else {
          console.warn(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–æ—Å—Ç—è ${index + 1}: –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –∏–º–µ–Ω`);
        }
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      dispatch({
        type: actions.SET_NOTIFICATION,
        payload: {
          type: 'success',
          message: `–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${groupsCreated} –≥—Ä—É–ø–ø —Å ${totalGuests} –≥–æ—Å—Ç—è–º–∏`
        }
      });

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      dispatch({ type: actions.SET_SHOW_IMPORT_JSON_MODAL, payload: false });
      
      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setJsonText('');
      setPreviewData(null);
      setError('');
      
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: ' + err.message);
    } finally {
      setIsProcessing(false);
    }
  };

  const handleClose = () => {
    dispatch({ type: actions.SET_SHOW_IMPORT_JSON_MODAL, payload: false });
    setJsonText('');
    setPreviewData(null);
    setError('');
  };

  if (!state.showImportJsonModal) return null;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    }}>
      <div style={{
        backgroundColor: 'white',
        borderRadius: '12px',
        padding: '24px',
        maxWidth: '800px',
        width: '90%',
        maxHeight: '90vh',
        overflow: 'auto',
        boxShadow: '0 10px 40px rgba(0, 0, 0, 0.3)'
      }}>
        {/* Header */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '20px',
          borderBottom: '1px solid #e9ecef',
          paddingBottom: '15px'
        }}>
          <h2 style={{ margin: 0, color: '#2c3e50', fontSize: '20px' }}>
            üì• –ò–º–ø–æ—Ä—Ç –≥–æ—Å—Ç–µ–π –∏–∑ JSON
          </h2>
          <button
            onClick={handleClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              color: '#95a5a6',
              padding: '0',
              width: '32px',
              height: '32px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'
            }}
          >
            ‚úï
          </button>
        </div>

        {/* File Upload */}
        <div style={{ marginBottom: '20px' }}>
          <label style={{
            display: 'block',
            marginBottom: '8px',
            fontWeight: 'bold',
            color: '#2c3e50'
          }}>
            –í—ã–±–µ—Ä–∏—Ç–µ JSON —Ñ–∞–π–ª:
          </label>
          <input
            ref={fileInputRef}
            type="file"
            accept=".json"
            onChange={handleFileSelect}
            style={{
              width: '100%',
              padding: '10px',
              border: '2px dashed #3498db',
              borderRadius: '8px',
              backgroundColor: '#f8f9fa',
              cursor: 'pointer'
            }}
          />
          <p style={{
            margin: '8px 0 0 0',
            fontSize: '12px',
            color: '#7f8c8d',
            fontStyle: 'italic'
          }}>
            –ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ JSON —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ –Ω–∏–∂–µ
          </p>
        </div>

        {/* JSON Input */}
        <div style={{ marginBottom: '20px' }}>
          <label style={{
            display: 'block',
            marginBottom: '8px',
            fontWeight: 'bold',
            color: '#2c3e50'
          }}>
            JSON —Ç–µ–∫—Å—Ç:
          </label>
          <textarea
            value={jsonText}
            onChange={handleJsonChange}
            placeholder="–í—Å—Ç–∞–≤—å—Ç–µ JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –≥–æ—Å—Ç–µ–π..."
            style={{
              width: '100%',
              minHeight: '150px',
              padding: '12px',
              border: '1px solid #ddd',
              borderRadius: '8px',
              fontSize: '14px',
              fontFamily: 'monospace',
              resize: 'vertical'
            }}
          />
        </div>

        {/* Error Display */}
        {error && (
          <div style={{
            padding: '12px',
            backgroundColor: '#fdf2f2',
            border: '1px solid #fecaca',
            borderRadius: '8px',
            color: '#dc2626',
            marginBottom: '20px'
          }}>
            ‚ùå {error}
          </div>
        )}

        {/* Preview */}
        {previewData && (
          <div style={{ marginBottom: '20px' }}>
            <h3 style={{ margin: '0 0 15px 0', color: '#2c3e50' }}>
              üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:
            </h3>
            <div style={{
              backgroundColor: '#f8f9fa',
              padding: '15px',
              borderRadius: '8px',
              border: '1px solid #e9ecef'
            }}>
              <div style={{ marginBottom: '10px' }}>
                <strong>ID —Å–æ–±—ã—Ç–∏—è:</strong> {previewData.event_id || '–ù–µ —É–∫–∞–∑–∞–Ω'}
              </div>
              <div style={{ marginBottom: '10px' }}>
                <strong>–î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:</strong> {previewData.export_date || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
              </div>
              <div style={{ marginBottom: '10px' }}>
                <strong>–í—Å–µ–≥–æ –≥–æ—Å—Ç–µ–π:</strong> {previewData.total_attendees || previewData.guests?.length || 0}
              </div>
              <div style={{ marginBottom: '10px' }}>
                <strong>–ì—Ä—É–ø–ø –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è:</strong> {previewData.guests?.length || 0}
              </div>
              <div style={{ marginBottom: '10px' }}>
                <strong>–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {
                  previewData.guests?.reduce((total, guest) => {
                    let count = 0;
                    if (guest.guest_name && guest.guest_name.trim()) count++;
                    if (guest.second_guest && guest.has_spouse && guest.second_guest.trim()) count++;
                    return total + count;
                  }, 0) || 0
                }
              </div>
              
              {/* Sample guests */}
              <div style={{ marginTop: '15px' }}>
                <strong>–ü—Ä–∏–º–µ—Ä—ã –≥–æ—Å—Ç–µ–π:</strong>
                <div style={{ marginTop: '8px' }}>
                  {previewData.guests?.slice(0, 3).map((guest, index) => {
                    const members = [];
                    if (guest.guest_name && guest.guest_name.trim()) {
                      members.push(guest.guest_name.trim());
                    }
                    if (guest.second_guest && guest.has_spouse && guest.second_guest.trim()) {
                      members.push(guest.second_guest.trim());
                    }
                    
                    return (
                      <div key={index} style={{
                        padding: '8px',
                        backgroundColor: 'white',
                        borderRadius: '4px',
                        marginBottom: '5px',
                        fontSize: '13px'
                      }}>
                        <strong>{guest.guest_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}</strong> 
                        {guest.has_spouse && guest.second_guest && (
                          <span style={{ color: '#7f8c8d' }}> + {guest.second_guest}</span>
                        )}
                        <span style={{ color: '#27ae60', marginLeft: '10px' }}>
                          (–±—É–¥–µ—Ç {members.length} —á–µ–ª.)
                        </span>
                        {members.length === 0 && (
                          <span style={{ color: '#e74c3c', marginLeft: '10px' }}>
                            ‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞
                          </span>
                        )}
                      </div>
                    );
                  })}
                  {previewData.guests?.length > 3 && (
                    <div style={{ color: '#7f8c8d', fontSize: '12px', fontStyle: 'italic' }}>
                      ... –∏ –µ—â–µ {previewData.guests.length - 3} –≥–æ—Å—Ç–µ–π
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Actions */}
        <div style={{
          display: 'flex',
          gap: '12px',
          justifyContent: 'flex-end',
          borderTop: '1px solid #e9ecef',
          paddingTop: '20px'
        }}>
          <button
            onClick={handleClose}
            style={{
              padding: '10px 20px',
              border: '1px solid #ddd',
              borderRadius: '6px',
              backgroundColor: 'white',
              color: '#333',
              cursor: 'pointer',
              fontSize: '14px'
            }}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            onClick={processGuests}
            disabled={!previewData || isProcessing}
            style={{
              padding: '10px 20px',
              border: 'none',
              borderRadius: '6px',
              backgroundColor: previewData && !isProcessing ? '#3498db' : '#bdc3c7',
              color: 'white',
              cursor: previewData && !isProcessing ? 'pointer' : 'not-allowed',
              fontSize: '14px',
              fontWeight: 'bold'
            }}
          >
            {isProcessing ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—ã'}
          </button>
        </div>
      </div>
    </div>
  );
};

export default ImportJsonModal;
